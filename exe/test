#!/usr/bin/env ruby

require_relative '../lib/box_dividers/top_divider_path'
require_relative '../lib/box_dividers/bottom_divider_path'
require_relative '../lib/box_dividers/container'
require_relative '../lib/box_dividers/sheet_builder'
require_relative '../lib/box_dividers/renderer'
require_relative '../lib/box_dividers/transformations'

top_full = BoxDividers::TopDividerPath.new(10, 2).path.move_to(BoxDividers::Point::ZERO)
bottom_full = BoxDividers::BottomDividerPath.new(10, 2).path.move_to(BoxDividers::Point::ZERO)

klasses = [BoxDividers::TopDividerPath, BoxDividers::BottomDividerPath]

units_high = 1

# boxes = [[10,units_high], [4,units_high], [3,units_high], [2,units_high]].map { |width, height|
boxes = [[10,units_high], [3,units_high], [2,units_high]].map { |width, height|
  klasses.map { |klass|
    klass.new(width, height).path.move_to(BoxDividers::Point::ZERO)
  }
}.flatten.map { |path|
  BoxDividers::Container.new(path, min_gap: 5)
}

sheet = BoxDividers::SheetBuilder.build(max_width: 1000, max_height: 600, outer_gap: 5) {
  boxes.each do |box|
    add box
  end
}.transform(BoxDividers::Transformations.mm_to_pt)

BoxDividers::Renderer.render_to_file(sheet, "test-nested-#{units_high}u.pdf")
